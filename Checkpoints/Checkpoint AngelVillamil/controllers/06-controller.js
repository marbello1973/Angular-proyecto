const utils = require('../utils');
/* ‚ö†Ô∏è No modificar nada arriba de esta l√≠nea ‚ö†Ô∏è

  6Ô∏è‚É£ ***** EJERCICIO 6 ***** - getBrandPrices 6Ô∏è‚É£:

   üü¢ Debes retornar la suma del precio de todos los coches de la marca recibida por par√°metro.
   üü¢ Si recibes el par√°metro "unused" con valor true, entonces retorna la suma de precios s√≥lo de los coches 
   que sean nuevos.
   üü¢ Si recibes el par√°metro "unused" con valor false, entonces retorna la suma de precios s√≥lo de los coches 
   que sean usados.
   üü¢ Si la marca no existe, arrojar un error que diga: "Marca no encontrada".
      
   üì¢ PUNTOS A TENER EN CUENTA üì¢
   1)El par√°metro "unused" puede tener el valor null.
   2) Debes obtener los coches a partir de los IDs almacenados en su marca.
*/

const getBrandPrices = (brand, unused) => {
  //if (typeof unused !== "boolean") throw Error("El par√°metro unused es inv√°lido");

  let brandIsTrue = utils.brands.find((marca) => marca.name === brand);
  let carIsTrue = utils.cars.filter((auto) => brandIsTrue.cars.includes(auto.id));

  if (!brandIsTrue) throw Error("Marca no encontrada");

  if (unused === true) {
    return carIsTrue.filter((e) => e.new === true).reduce((acc, c) => acc + c.price, 0);
  }

  if (unused === false) {
    return carIsTrue.filter((e) => e.new === false).reduce((acc, c) => acc + c.price, 0);
  }

  return carIsTrue.reduce((acc, c) => acc + c.price, 0);
};


//‚ö†Ô∏è No modificar nada debajo de esta l√≠nea ‚ö†Ô∏è
module.exports = getBrandPrices;
